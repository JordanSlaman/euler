"""
Even Fibonacci numbers
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""
""" 
# Apr 17, 2013
total = 0
def z(x,y):
	global total
	if y > 4000000:
		print total
	else:
		if y %2 == 0:
			total += y
		newx = y
		newy = x+y
		z(newx,newy)
z(1,2)
"""
# Nov 06, 2016
import itertools

def nextfib(n):
    if n in [0, 1]:
        return n
    else:
        return nextfib(n-2) + nextfib(n-1)

for x in itertools.count():
    num = nextfib(x+1)
    if num >= 4000000:
        print sum(map(lambda x: x if x % 2 == 0 else 0, map(nextfib, range(2, x+1))))
        break

#print sum(map(lambda x: x if x % 2 == 0 else 0, map(nextfib, range(2, 10))))